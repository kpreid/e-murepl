# Copyright 2011 Kevin Reid, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.syntax("0.9")

def makeInitPool(make, reserve :(int >= 0)) {
  def pool := [].diverge()
  
  def fillPool() {
    while (pool.size() < reserve) {
      pool.push(make())
    }
  }
  
  fillPool()
  
  return def pooledMake() {
    if (reserve <= 0) {
      return make()
    } else {
      def [fresh] := pool.removeRun(0, 1) # O(reserve); assuming it's small
      fillPool()
      return fresh
    }
  }
}