BUGS:
- Caps put into argv for subrepls leak on multiuser unixes.

FEATURES:
- Put config in file (maybe have separate password-store hook?), allow config of web listen address and port.
- Persistence of repl state.
- Long polling for async web output.
- Port repl features from eel.
    - printing.
    - misc libraries.
    - accumulator etc. default to on.
- Reset-vat button on web UI.

OTHER TODOS:
- Make sure web UI static files have appropriate caching.
- Prevent *.do files, .gitignore, etc from being served from static files dir.

pragma.enable("accumulator");def diff(s) {return accum [].asMap() for `&@k` => v ? (!safeScope.maps(k) || v != safeScope.getSlot(k)) in s { _.with(k, v) }}

Possibly better Java-subprocess starting: copy java.class.path property from current JVM, use java.home to find java executable: http://stackoverflow.com/questions/1229605/is-this-really-the-best-way-to-start-a-second-jvm-from-java-code